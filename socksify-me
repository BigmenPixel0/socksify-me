#!/bin/bash

command="${1}"
version="0.3"

help() {
  cat <<EOF
socksify-me - A simple script that socksifies your traffic

Usage: socksify-me start|stop [options]

Required options:

  --server-ipv4		IPv4 address of the server to which the socks5 client connects (conflicts: --uid)
  --server-ipv6         IPv6 address of the server to which the socks5 client connects (conflicts: --uid)
  --uid			ID of the user who is running the socks5 client (conflicts: --server-ipv4 and --server-ipv6)
  --socks5-port		Local socks5 port
  --net-device		Your network device

EOF
}

if [[ "${command}" =~ (start|stop)$ ]]; then
  shift
fi

while [ -n "${1}" ]; do
  case "${1}" in
    --server-ipv4)
      if [ -n "${2}" ]; then
        server_ipv4="${2}"
        shift
        shift
      else
        help
        exit 1
      fi
      ;;

    --server-ipv6)
      if [ -n "${2}" ]; then
        server_ipv6="${2}"
        shift
        shift
      else
        help
        exit 1
      fi
      ;;


    --uid)
      if [ -n "${2}" ]; then
        uid="${2}"
        shift
        shift
      else
        help
        exit 1
      fi
      ;;

    --socks5-port)
      if [ -n "${2}" ]; then
        socks5_port="${2}"
        shift
        shift
      else
        help
        exit 1
      fi
      ;;

    --net-device)
      if [ -n "${2}" ]; then
        net_device="${2}"
        shift
        shift
      else
        help
        exit 1
      fi
      ;;

    --version)
      echo "socksify-me ${version}"
      exit 0
      ;;

    --help)
      help
      exit 0
      ;;

    *)
      help
      exit 1
      ;;
  esac
done

if [[ -n "${server_ipv4}" || "${server_ipv6}" ]]; then
  if [[ -n "${uid}" ]]; then
    help
    exit 1
  else
    exclude_method="ip"
  fi
fi

if [[ -n "${uid}" ]]; then
  if [[ -n "${server_ipv4}" || "${server_ipv6}" ]]; then
    help
    exit 1
  else
    exclude_method="uid"
  fi
fi

if [[ -n "${net_device}" ]]; then
  default_gateway_ipv4=$(ip -4 route show dev "${net_device}" table main | awk '$1=="default" {print $3}')
  default_gateway_ipv6=$(ip -6 route show dev "${net_device}" table main | awk '$1=="default" {print $3}')
fi

tun_device="tun0"
tun_ipv4="10.0.0.1"
tun_ipv6="fdfe:dcba:9876::1"

case "${command}" in
  start)
    mkdir -p /run/socksify-me
    echo "default_gateway_ipv4=${default_gateway_ipv4}" > /run/socksify-me/env
    echo "default_gateway_ipv6=${default_gateway_ipv6}" >> /run/socksify-me/env
    echo "exclude_method=${exclude_method}" >> /run/socksify-me/env
    echo "net_device=${net_device}" >> /run/socksify-me/env
    echo "socks5_port=${socks5_port}" >>/run/socksify-me/env
    echo "uid=${uid}" >> /run/socksify-me/env
    echo "server_ipv4=${server_ipv4}" >> /run/socksify-me/env
    echo "server_ipv6=${server_ipv6}" >> /run/socksify-me/env

    ip tuntap add mode tun "${tun_device}"
    ip -4 addr replace "${tun_ipv4}/24" dev "${tun_device}"
    ip -6 addr replace "${tun_ipv6}/126" dev "${tun_device}"
    ip link set "${tun_device}" up

    tun2socks -device tun://"${tun_device}" -proxy socks5://localhost:"${socks5_port}" &

    if [[ "${exclude_method}" -eq ip ]]; then
      ip -4 route add "${server_ipv4}" via "${default_gateway_ipv4}" metric 5
      ip -6 route add "${server_ipv6}" via "${default_gateway_ipv6}" metric 5
    fi

    if [[ "${exclude_method}" -eq uid ]]; then
      ip -4 route add table 100"${uid}" default dev "${net_device}" via "${default_gateway_ipv4}"
      ip -6 route add table 100"${uid}" default dev "${net_device}" via "${default_gateway_ipv6}"
      sysctl -w net.ipv4.conf."${net_device}".rp_filter=2
      ip -4 rule add uidrange "${uid}"-"${uid}" lookup 100"${uid}"
      ip -6 rule add uidrange "${uid}"-"${uid}" lookup 100"${uid}"
    fi

    ip -4 route add default via "${tun_ipv4}" metric 6
    ip -6 route add default via "${tun_ipv6}" metric 6
    ;;

  stop)
    source /run/socksify-me/env

    killall tun2socks

    if [[ "${exclude_method}" -eq ip ]]; then
      ip -4 route del "${server_ipv4}" via "${default_gateway_ipv4}" metric 5
      ip -6 route del "${server_ipv6}" via "${default_gateway_ipv6}" metric 5
    fi

    if [[ "${exclude_method}" -eq uid ]]; then
      ip -4 route del table 100"${uid}" default dev "${net_device}" via "${default_gateway_ipv4}"
      ip -6 route del table 100"${uid}" default dev "${net_device}" via "${default_gateway_ipv6}"
      ip -4 rule del uidrange "${uid}"-"${uid}" lookup 100"${uid}"
      ip -6 rule del uidrange "${uid}"-"${uid}" lookup 100"${uid}"
    fi

    ip tuntap del mode tun "${tun_device}"

    ;;

  *)
    help
    exit 1
    ;;
esac


